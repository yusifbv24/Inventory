	# Main context - these settings apply globally
events {
    worker_connections 1024;  # How many connections each worker can handle
}
http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	
	 # Define upstream servers
    upstream web_app {
        server inventory_web:80;
    }

    upstream api_gateway {
        server inventory_api_gateway:80;
    }
	
    # Security headers - these protect against common attacks
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	
	# Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

	# SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
	
    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name inventory166.az www.inventory166.az 10.0.7.39;
        return 301 https://$server_name$request_uri;
    }

    # Main HTTPS server configuration
    server {
        listen 443 ssl http2;  # Enable SSL and HTTP/2 for better performance
        server_name inventory166.az www.inventory166.az 10.0.7.39;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/inventory166.crt;
        ssl_certificate_key /etc/nginx/ssl/inventory166.key;
		
		client_max_body_size 20M;
		
        # Main application
        location / {
            proxy_pass http://web_app;	
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # API Gateway
        location /api/ {
			proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # SignalR Hub
        location /notificationHub {
            proxy_pass http://web_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
		
		# Serve static images directly from nginx
		location /images/ {
			alias /var/www/images/;
			expires 7d;
			add_header Cache-Control "public, immutable";
			
			#Enable CORS for images
			add_header Access-Control-Allow-Origin "*";
			add_header Access-Control-Allow-Methods "GET,OPTIONS";
			add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
		}
		
		# Main application
		location / {
			proxy_pass http://web_app;
    }
}