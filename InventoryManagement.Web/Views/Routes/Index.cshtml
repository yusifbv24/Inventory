@model PagedResultDto<RouteViewModel>
@{
    ViewData["Title"] = "Routes";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Inventory Routes</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Home/Dashboard">Dashboard</a></li>
        <li class="breadcrumb-item active">Routes</li>
    </ol>

    <div class="card mb-4 shadow">
        <div class="card-header">
            <div class="row g-3">
                <div class="col md-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" id="searchInput" class="form-control"
                               placeholder="Search by code, model, vendor..." />
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                        <input type="text" id="dateRange" class="form-control"
                               placeholder="Select date range" />
                    </div>
                </div>

                <div class="col-md-2">
                    <select id="statusFilter" class="form-select">
                        @{
                            var falseSelection = ViewBag.CurrentFilter == false ? "selected" : "";
                            var trueSelection = ViewBag.CurrentFilter == true ? "selected" : "";
                        }
                        <option value="">All Status</option>
                        <option value="false" falseSelection >Pending</option>
                        <option value="true" trueSelection >Completed</option>
                    </select>
                </div>

                <div class="col-md-2">
                    <select id="departmentFilter" class="form-select">
                        <option value="">All Departments</option>
                    </select>
                </div>

                <div class="col-md-2">
                    <button class="btn btn-primary w-100" onclick="applyFilters()">
                        <i class="fas fa-filter"></i> Apply
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4 shadow">
        <div class="card-header">
            <div class="row align-items-center">
                <div class="col">
                    <partial name="_GmailPagination" model="Model" />
                </div>
                <div class="col-auto">
                    @if (User.HasPermission("route.create") || User.HasPermission("route.create.direct"))
                    {
                        <a asp-action="Transfer" class="btn btn-primary btn-sm">
                            <i class="fas fa-exchange-alt"></i> New Transfer
                        </a>
                    }
                    <button class="btn btn-outline-secondary btn-sm" onclick="exportData()">
                        <i class="fas fa-download"></i> Export
                    </button>
                    <button class="btn btn-outline-secondary btn-sm" onclick="window.print()">
                        <i class="fas fa-print"></i> Print
                    </button>
                    <div class="btn-group btn-group-sm" role="group">
                        <a asp-action="Index" asp-route-isCompleted="" class="btn btn-outline-secondary @(ViewBag.CurrentFilter == null ? "active" : "")">
                            All
                        </a>
                        <a asp-action="Index" asp-route-isCompleted="false" class="btn btn-outline-warning @(ViewBag.CurrentFilter == false ? "active" : "")">
                            Pending
                        </a>
                        <a asp-action="Index" asp-route-isCompleted="true" class="btn btn-outline-success @(ViewBag.CurrentFilter == true ? "active" : "")">
                            Completed
                        </a>
                    </div>
                </div>
            </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th><input type="checkbox" id="selectAll" /> </th>
                            <th>Image</th>
                            <th>Date</th>
                            <th>Type</th>
                            <th>Product</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="routesTableBody">
                        @foreach (var route in Model.Items)
                        {
                            <tr data-search="@($"{route.InventoryCode} {route.Model} {route.Vendor} {route.FromDepartmentName} {route.ToDepartmentName}".ToLower())">
                                <td><input type="checkbox" class="route-checkbox" value="@route.Id" /></td>
                                <td class="text-center">
                                    @if (!string.IsNullOrEmpty(route.ImageUrl))
                                    {
                                        <img src="@($"http://localhost:5000{route.ImageUrl}")"
                                             class="img-thumbnail"
                                             style="width: 60px; height: 60px; object-fit: cover; cursor: pointer;"
                                             onclick="showImageModal('@($"http://localhost:5000{route.ImageUrl}")', 'Route @route.Id')"
                                             alt="Route Image">
                                    }
                                    else
                                    {
                                        <div class="bg-light rounded d-flex align-items-center justify-content-center"
                                             style="width: 60px; height: 60px;">
                                            <i class="fas fa-image text-muted"></i>
                                        </div>
                                    }
                                </td>
                                <td>
                                    <small>
                                        @route.CreatedAt.ToString("MM/dd/yyyy")<br />
                                        @route.CreatedAt.ToString("HH:mm")
                                    </small>
                                </td>
                                <td>
                                    @{
                                        var typeColor = route.RouteTypeName switch
                                        {
                                            "New" => "bg-success",
                                            "Existing" => "bg-primary",
                                            "Transfer" => "bg-info",
                                            "Update" => "bg-warning",
                                            "Removal" => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @typeColor">@route.RouteTypeName</span>
                                </td>
                                <td>
                                    <a asp-controller="Products" asp-action="Details" asp-route-id="@route.ProductId"
                                       class="text-decoration-none">
                                        <span class="badge bg-primary">@route.InventoryCode</span>
                                        @route.Model
                                    </a>
                                    <br />
                                    <small class="text-muted">@route.Vendor</small>
                                </td>
                                <td>
                                    @if (route.FromDepartmentName != null)
                                    {
                                        <div>@route.FromDepartmentName</div>
                                        <small class="text-muted">
                                            <i class="fas fa-user"></i> @(route.FromWorker ?? "N/A")
                                        </small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">N/A</span>
                                    }
                                </td>
                                <td>
                                    <div>@route.ToDepartmentName</div>
                                    <small class="text-muted">
                                        <i class="fas fa-user"></i> @(route.ToWorker ?? "N/A")
                                    </small>
                                </td>
                                <td>
                                    @if (route.IsCompleted)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-circle"></i> Completed
                                        </span>
                                        @if (route.CompletedAt.HasValue)
                                        {
                                            <br />
                                            <small class="text-muted">@route.CompletedAt.Value.ToString("MM/dd HH:mm")</small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">
                                            <i class="fas fa-clock"></i> Pending Transfer
                                        </span>
                                        <br />
                                        <small class="text-muted">
                                            Created: @route.CreatedAt.ToString("MM/dd HH:mm")
                                        </small>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@route.Id"
                                           class="btn btn-sm btn-outline-info" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
										@if (User.HasPermission("route.update") && !route.IsCompleted)
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-warning"
                                                    onclick="editRoute(@route.Id)" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                        }
                                        @if (!route.IsCompleted)
                                        {
                                            <button type="button" class="btn btn-sm btn-success"
                                                    onclick="completeRoute(@route.Id)" title="Complete">
                                                <i class="fas fa-check"></i>
                                            </button>
                                        }
                                        @if (User.HasPermission("route.delete")&&!route.IsCompleted)
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-danger"
                                                    onclick="deleteRoute(@route.Id)" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

            @* <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pageNumber="@(Model.PageNumber - 1)"
                                   asp-route-isCompleted="@ViewBag.CurrentFilter">
                                    <i class="fas fa-chevron-left"></i> Previous
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pageNumber="@i"
                                   asp-route-isCompleted="@ViewBag.CurrentFilter">@i</a>
                            </li>
                        }

                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index"
                                   asp-route-pageNumber="@(Model.PageNumber + 1)"
                                   asp-route-isCompleted="@ViewBag.CurrentFilter">
                                    Next <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div> *@
                <div class="card-footer">
                    <partial name="_GmailPagination" model="Model" />
                </div>
    </div>
</div>

<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalTitle">Route Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" class="img-fluid" alt="Route Image">
            </div>
        </div>
    </div>
</div>

<!-- Hidden form for CSRF token -->
<form id="csrfForm" style="display: none;">
    @Html.AntiForgeryToken()
</form>

<div class="modal fade" id="editRouteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Route</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editRouteId" />
                <div class="mb-3">
                    <label class="form-label">To Worker</label>
                    <input type="text" class="form-control" id="editToWorker" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Notes</label>
                    <textarea class="form-control" id="editNotes" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveRouteEdit()">Save Changes</button>
            </div>
        </div>
    </div>
</div>
</div>

@section Scripts {
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
            <script src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
            <script>
                $(document).ready(function() {
                    // Initialize date range picker
                    $('#dateRange').daterangepicker({
                        autoUpdateInput: false,
                        locale: {
                            cancelLabel: 'Clear',
                            format: 'MM/DD/YYYY'
                        }
                    });

                    $('#dateRange').on('apply.daterangepicker', function(ev, picker) {
                        $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
                    });

                    $('#dateRange').on('cancel.daterangepicker', function() {
                        $(this).val('');
                    });

                    // Load departments
                    loadDepartments();

                    // Real-time search
                    $('#searchInput').on('input', function() {
                        filterTable();
                    });
                });

                function filterTable() {
                    const searchTerm = $('#searchInput').val().toLowerCase();
                    $('#routesTableBody tr').each(function() {
                        const searchData = $(this).data('search');
                        $(this).toggle(searchData.includes(searchTerm));
                    });
                }

                function loadDepartments() {
                    $.get('/api/departments', function(departments) {
                        const select = $('#departmentFilter');
                        departments.forEach(dept => {
                            select.append(`<option value="${dept.id}">${dept.name}</option>`);
                        });
                    });
                }

                function applyFilters() {
                    const params = new URLSearchParams();

                    const search = $('#searchInput').val();
                    if (search) params.append('search', search);

                    const dateRange = $('#dateRange').val();
                    if (dateRange) {
                        const dates = dateRange.split(' - ');
                        params.append('startDate', dates[0]);
                        params.append('endDate', dates[1]);
                    }

                    const status = $('#statusFilter').val();
                    if (status) params.append('isCompleted', status);

                    const dept = $('#departmentFilter').val();
                    if (dept) params.append('departmentId', dept);

                    params.append('pageNumber', '@Model.PageNumber');
                    params.append('pageSize', '@Model.PageSize');

                    window.location.href = '/Routes?' + params.toString();
                }

                function changePage(page) {
                    const params = new URLSearchParams(window.location.search);
                    params.set('pageNumber', page);
                    window.location.href = '/Routes?' + params.toString();
                }

                function exportData() {
                    const params = new URLSearchParams(window.location.search);
                    params.append('export', 'true');
                    window.location.href = '/Routes/Export?' + params.toString();
                }
            </script>
    <script>
        function showImageModal(imageUrl, title) {
            $('#modalImage').attr('src', imageUrl);
            $('#imageModalTitle').text(title);
            $('#imageModal').modal('show');
        }

        function completeRoute(id) {
            if (confirm('Are you sure you want to mark this route as completed?')) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/Routes/Complete/' + id;

                const token = document.querySelector('#csrfForm input[name="__RequestVerificationToken"]').value;
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token;

                form.appendChild(tokenInput);
                document.body.appendChild(form);
                form.submit();
            }
        }

        function deleteRoute(id) {
            if (confirm('Are you sure you want to delete this route?')) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/Routes/Delete/' + id;

                const token = document.querySelector('#csrfForm input[name="__RequestVerificationToken"]').value;
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token;

                form.appendChild(tokenInput);
                document.body.appendChild(form);
                form.submit();
            }
        }
        
        function editRoute(id) {
            window.location.href = `/Routes/Edit/${id}`;
        }

        function saveRouteEdit() {
            const id = $('#editRouteId').val();
            const formData = new FormData();
            formData.append('ToWorker', $('#editToWorker').val());
            formData.append('Notes', $('#editNotes').val());

            $.ajax({
                url: '/Routes/Edit/' + id,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'RequestVerificationToken': $('#csrfForm input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    $('#editRouteModal').modal('hide');
                    if (response.isApprovalRequest) {
                        showToast(response.message || 'Route update submitted for approval', 'info');
                    } else {
                        showToast('Route updated successfully', 'success');
                    }
                    setTimeout(() => location.reload(), 1500);
                },
                error: function(xhr) {
                    const errorMsg = ErrorHandler.parseErrorMessage(xhr, 'Failed to update route');
                    showToast(errorMsg, 'error');
                }
            });
        }
    </script>
            <style>
                .gmail-pagination {
                    font-size: 0.875rem;
                }

                .pagination-controls .btn {
                    padding: 0.25rem 0.5rem;
                    margin: 0 0.125rem;
                }
            </style>
}