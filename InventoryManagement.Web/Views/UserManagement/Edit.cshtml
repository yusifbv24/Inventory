@model EditUserViewModel
@{
    ViewData["Title"] = "Edit User";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mt-4">Edit User</h1>
            <ol class="breadcrumb mb-4">
                <li class="breadcrumb-item"><a href="/Home/Dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index")">User Management</a></li>
                <li class="breadcrumb-item active">Edit User</li>
            </ol>
        </div>
        <div>
            <a href="@Url.Action("Index")" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to Users
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-user-edit"></i> User Information
                    </h6>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" method="post">
                        @Html.AntiForgeryToken()
                        <input asp-for="Id" type="hidden" />
                        <input asp-for="Username" type="hidden" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Username</label>
                                    <input value="@Model.Username" class="form-control" readonly disabled />
                                    <div class="form-text">Username cannot be changed.</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="Email" class="form-label">Email <span class="text-danger">*</span></label>
                                    <input asp-for="Email" class="form-control" placeholder="Enter email address" />
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="FirstName" class="form-label">First Name <span class="text-danger">*</span></label>
                                    <input asp-for="FirstName" class="form-control" placeholder="Enter first name" />
                                    <span asp-validation-for="FirstName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="LastName" class="form-label">Last Name <span class="text-danger">*</span></label>
                                    <input asp-for="LastName" class="form-control" placeholder="Enter last name" />
                                    <span asp-validation-for="LastName" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Status</label>
                                    <div class="form-check">
                                        <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                        <label asp-for="IsActive" class="form-check-label">
                                            Active User
                                        </label>
                                    </div>
                                    <div class="form-text">Inactive users cannot login to the system.</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Roles</label>
                                    <div class="role-selection">
                                        @foreach (var role in Model.AvailableRoles)
                                        {
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input"
                                                       name="SelectedRoles" value="@role.Value"
                                                       id="role_@role.Value"
                                                       @(Model.CurrentRoles.Contains(role.Value) ? "checked" : "") />
                                                <label class="form-check-label" for="role_@role.Value">
                                                    @role.Text
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("Index")" class="btn btn-secondary me-md-2">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Update User
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-key"></i> Direct Permissions
                    </h6>
                </div>
                <div class="card-body">
                    <div id="userPermissions" class="mb-3">
                        <div class="text-center">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Manage Permissions</label>
                        <select id="permissionSelect" class="form-select mb-2">
                            <option value="">Select a permission</option>
                        </select>
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-sm btn-success" onclick="grantPermission()">
                                Grant Permission
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card shadow mt-4">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-lock"></i> Password Management
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-grid">
                        <a href="@Url.Action("ResetPassword", new { id = Model.Id })" class="btn btn-outline-warning">
                            <i class="fas fa-key"></i> Reset Password
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="jwtToken" value="@Context.Session.GetString("JwtToken")" />

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load permissions after a short delay to ensure DOM is ready
            setTimeout(function() {
                loadUserPermissions();
                loadAvailablePermissions();
            }, 100);
        });

        function loadUserPermissions() {
            $('#userPermissions').html('<div class="text-center"><div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden">Loading...</span></div></div>');

            $.ajax({
                url: '@Url.Action("GetUserDirectPermissions", "UserManagement", new { id = Model.Id })',
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + $('#jwtToken').val()
                },
                success: function(data) {
                    var html = '';
                    if (data && data.length > 0) {
                        data.forEach(function(permission) {
                            html += `
                                <div class="permission-item d-flex justify-content-between align-items-center mb-2 p-2 bg-light rounded">
                                    <div>
                                        <span class="fw-bold">${permission.name}</span>
                                        <small class="d-block text-muted">${permission.description}</small>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-outline-danger"
                                            onclick="revokePermission('${permission.name}')">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            `;
                        });
                    } else {
                        html = '<p class="text-muted text-center">No direct permissions assigned</p>';
                    }
                    $('#userPermissions').html(html);
                },
                error: function(xhr, status, error) {
                    console.error('Failed to load permissions:', error);
                    $('#userPermissions').html('<p class="text-danger text-center">Failed to load permissions</p>');
                }
            });
        }

        function loadAvailablePermissions() {
            $.ajax({
                url: '@Url.Action("GetAllPermissions", "UserManagement")',
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + $('#jwtToken').val()
                },
                success: function(data) {
                    var select = $('#permissionSelect');
                    select.empty();
                    select.append('<option value="">Select a permission</option>');

                    var grouped = {};
                    data.forEach(function(permission) {
                        if (!grouped[permission.category]) {
                            grouped[permission.category] = [];
                        }
                        grouped[permission.category].push(permission);
                    });

                    Object.keys(grouped).forEach(function(category) {
                        var optgroup = $('<optgroup>', { label: category });
                        grouped[category].forEach(function(permission) {
                            optgroup.append(`<option value="${permission.name}">${permission.name} - ${permission.description}</option>`);
                        });
                        select.append(optgroup);
                    });
                },
                error: function(xhr, status, error) {
                    console.error('Failed to load available permissions:', error);
                }
            });
        }

        function grantPermission() {
            var permissionName = $('#permissionSelect').val();
            if (!permissionName) {
                showToast('Please select a permission', 'warning');
                return;
            }

            $.ajax({
                url: '@Url.Action("GrantPermission", "UserManagement", new { id = Model.Id })',
                type: 'POST',
                data: JSON.stringify({ permissionName: permissionName }),
                contentType: 'application/json',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    loadUserPermissions();
                    $('#permissionSelect').val('');
                    showToast('Permission granted successfully', 'success');
                },
                error: function() {
                    showToast('Failed to grant permission', 'error');
                }
            });
        }

        function revokePermission(permissionName) {
            if (!confirm(`Revoke permission: ${permissionName}?`)) return;

            $.ajax({
                url: '@Url.Action("RevokePermission", "UserManagement", new { id = Model.Id })',
                type: 'POST',
                data: JSON.stringify({ permissionName: permissionName }),
                contentType: 'application/json',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    loadUserPermissions();
                    showToast('Permission revoked successfully', 'success');
                },
                error: function() {
                    showToast('Failed to revoke permission', 'error');
                }
            });
        }
    </script>
}

<style>
    .role-selection {
        max-height: 200px;
        overflow-y: auto;
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        padding: 0.5rem;
    }

    .permission-item {
        transition: all 0.2s;
    }

        .permission-item:hover {
            background-color: #e9ecef !important;
        }
</style>