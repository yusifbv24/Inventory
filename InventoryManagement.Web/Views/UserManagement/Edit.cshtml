@model EditUserViewModel
@{
    ViewData["Title"] = "Edit User";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mt-4">Edit User</h1>
            <ol class="breadcrumb mb-4">
                <li class="breadcrumb-item"><a href="/Home/Dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index")">User Management</a></li>
                <li class="breadcrumb-item active">Edit User</li>
            </ol>
        </div>
        <div>
            <a href="@Url.Action("Index")" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to Users
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-user-edit"></i> User Information
                    </h6>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" method="post">
                        @Html.AntiForgeryToken()
                        <input asp-for="Id" type="hidden" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="Username" class="form-label">Username</label>
                                    <input asp-for="Username" class="form-control" readonly />
                                    <div class="form-text">Username cannot be changed.</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="Email" class="form-label">Email <span class="text-danger">*</span></label>
                                    <input asp-for="Email" class="form-control" placeholder="Enter email address" />
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="FirstName" class="form-label">First Name <span class="text-danger">*</span></label>
                                    <input asp-for="FirstName" class="form-control" placeholder="Enter first name" />
                                    <span asp-validation-for="FirstName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="LastName" class="form-label">Last Name <span class="text-danger">*</span></label>
                                    <input asp-for="LastName" class="form-control" placeholder="Enter last name" />
                                    <span asp-validation-for="LastName" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Status</label>
                                    <div class="form-check">
                                        <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                        <label asp-for="IsActive" class="form-check-label">
                                            Active User
                                        </label>
                                    </div>
                                    <div class="form-text">Inactive users cannot login to the system.</div>
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("Index")" class="btn btn-secondary me-md-2">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Update User
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-user-shield"></i> Role Management
                    </h6>
                </div>
                <div class="card-body">
                    <!-- Existing role management code -->
                </div>
            </div>

            <div class="card shadow mt-4">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-key"></i> Direct Permissions
                    </h6>
                </div>
                <div class="card-body">
                    <div id="userPermissions" class="mb-3">
                        <div class="text-center">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Grant Permission</label>
                        <div class="input-group">
                            <select id="permissionSelect" class="form-select">
                                <option value="">Select a permission</option>
                            </select>
                            <button type="button" class="btn btn-outline-success" onclick="grantPermission()">
                                <i class="fas fa-plus"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

            <div class="card shadow mt-4">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-key"></i> Password Management
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-grid">
                        <a href="@Url.Action("ResetPassword", new { id = Model.Id })" class="btn btn-outline-warning">
                            <i class="fas fa-key"></i> Reset Password
                        </a>
                    </div>
                </div>
            </div>

            <div class="card shadow mt-4">
                <div class="card-header">
                    <h6 class="m-0 font-weight-bold text-danger">
                        <i class="fas fa-exclamation-triangle"></i> Danger Zone
                    </h6>
                </div>
                <div class="card-body">
                    <p class="text-muted mb-3">Once you delete a user, there is no going back. Please be certain.</p>
                    <div class="d-grid">
                        <button type="button" class="btn btn-outline-danger" onclick="deleteUser(@Model.Id, '@Model.Username')">
                            <i class="fas fa-trash"></i> Delete User
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

<!-- Remove Role Modal -->
<div class="modal fade" id="removeRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Remove Role</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to remove the role <strong id="roleToRemove"></strong> from this user?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="removeRoleForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <input name="id" value="@Model.Id" type="hidden" />
                    <input name="RoleName" type="hidden" />
                    <button type="submit" class="btn btn-danger">Remove Role</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete user <strong id="deleteUsername"></strong>?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .form-label {
        font-weight: 600;
        color: #5a5c69;
    }

    .card {
        border: 0;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
    }

    .card-header {
        background-color: #f8f9fc;
        border-bottom: 1px solid #e3e6f0;
    }

    .form-control:focus {
        border-color: #4e73df;
        box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
    }

    .form-select:focus {
        border-color: #4e73df;
        box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
    }

    .current-roles {
        max-height: 200px;
        overflow-y: auto;
    }

    .badge {
        font-size: 0.875rem;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            loadUserPermissions();
            loadAvailablePermissions();
        });

        function loadUserPermissions() {
            $.get('@Url.Action("GetUserDirectPermissions", "UserManagement", new { id = Model.Id })', function(data) {
                var html = '';
                if (data.length > 0) {
                    data.forEach(function(permission) {
                        html += `
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="badge bg-info">${permission.name}</span>
                                <button type="button" class="btn btn-sm btn-outline-danger"
                                        onclick="revokePermission('${permission.name}')">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        `;
                    });
                } else {
                    html = '<p class="text-muted">No direct permissions assigned</p>';
                }
                $('#userPermissions').html(html);
            });
        }

        function loadAvailablePermissions() {
            $.get('@Url.Action("GetAllPermissions", "UserManagement")', function(data) {
                var select = $('#permissionSelect');
                select.empty();
                select.append('<option value="">Select a permission</option>');
                data.forEach(function(permission) {
                    select.append(`<option value="${permission.name}">${permission.name}</option>`);
                });
            });
        }

        function grantPermission() {
            var permissionName = $('#permissionSelect').val();
            if (!permissionName) {
                alert('Please select a permission');
                return;
            }

            $.ajax({
                url: '@Url.Action("GrantPermission", "UserManagement", new { id = Model.Id })',
                type: 'POST',
                data: JSON.stringify({ permissionName: permissionName }),
                contentType: 'application/json',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    loadUserPermissions();
                    $('#permissionSelect').val('');
                    showToast('Permission granted successfully', 'success');
                },
                error: function() {
                    showToast('Failed to grant permission', 'error');
                }
            });
        }

        function revokePermission(permissionName) {
            if (!confirm(`Revoke permission: ${permissionName}?`)) return;

            $.ajax({
                url: '@Url.Action("RevokePermission", "UserManagement", new { id = Model.Id })',
                type: 'POST',
                data: JSON.stringify({ permissionName: permissionName }),
                contentType: 'application/json',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    loadUserPermissions();
                    showToast('Permission revoked successfully', 'success');
                },
                error: function() {
                    showToast('Failed to revoke permission', 'error');
                }
            });
        }
    </script>
}