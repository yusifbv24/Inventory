@model NotificationListViewModel
@{
    ViewData["Title"] = "Notifications";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Notifications</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Home/Dashboard">Dashboard</a></li>
        <li class="breadcrumb-item active">Notifications</li>
    </ol>

    <div class="row">
        <div class="col-lg-8">
            <div class="card mb-4 shadow">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span>
                        <i class="fas fa-bell me-1"></i>
                        All Notifications
                    </span>
                    <button class="btn btn-sm btn-outline-primary" onclick="markAllAsRead()">
                        <i class="fas fa-check-double"></i> Mark All as Read
                    </button>
                </div>
                <div class="card-body">
                    <div id="notificationsList">
                        @foreach (var notification in Model.Notifications)
                        {
                            <div class="notification-item @(notification.IsRead ? "" : "unread")"
                                 data-id="@notification.Id">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        @Html.Raw(GetNotificationIcon(notification.Type))
                                    </div>
                                    <div class="col">
                                        <h6 class="mb-1">@notification.Title</h6>
                                        <p class="mb-1">@notification.Message</p>
                                        <small class="text-muted">
                                            @notification.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                                        </small>
                                    </div>
                                    <div class="col-auto">
                                        @if (!notification.IsRead)
                                        {
                                            <button class="btn btn-sm btn-outline-secondary"
                                                    onclick="markAsRead(@notification.Id)">
                                                <i class="fas fa-check"></i>
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    @if (!Model.Notifications.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-bell-slash fa-3x text-muted"></i>
                            <p class="mt-3 text-muted">No notifications yet</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card mb-4 shadow">
                <div class="card-header">
                    <i class="fas fa-filter me-1"></i>
                    Filters
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select class="form-select" id="statusFilter">
                            <option value="">All</option>
                            <option value="unread">Unread Only</option>
                            <option value="read">Read Only</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Type</label>
                        <select class="form-select" id="typeFilter">
                            <option value="">All Types</option>
                            <option value="approval_request">Approval Requests</option>
                            <option value="approval_processed">Approval Results</option>
                        </select>
                    </div>
                    <button class="btn btn-primary w-100" onclick="applyFilters()">
                        <i class="fas fa-search"></i> Apply Filters
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function markAsRead(notificationId) {
            $.ajax({
                url: '/Notifications/MarkAsRead',
                type: 'POST',
                data: { notificationId: notificationId }, // Send as form data, not JSON
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function() {
                    $(`.notification-item[data-id="${notificationId}"]`).removeClass('unread');
                    $(`.notification-item[data-id="${notificationId}"] .btn`).remove();
                    updateNotificationCount();
                },
                error: function(xhr) {
                    console.error('Failed to mark as read:', xhr);
                    showToast('Failed to mark notification as read', 'error');
                }
            });
        }

        function markAllAsRead() {
            $.post('/Notifications/MarkAllAsRead', function() {
                $('.notification-item').removeClass('unread');
                $('.notification-item .btn').remove();
                updateNotificationCount();
                showToast('All notifications marked as read', 'success');
            });
        }

        function applyFilters() {
            const status = $('#statusFilter').val();
            const type = $('#typeFilter').val();
            window.location.href = `/Notifications?status=${status}&type=${type}`;
        }

        function updateNotificationCount() {
            loadNotificationCount(); // From _NotificationScripts
        }
    </script>
}

@functions {
    string GetNotificationIcon(string type)
    {
        return type switch
        {
            "approval_request" => "<i class='fas fa-clock text-warning fa-2x'></i>",
            "approval_processed" => "<i class='fas fa-check-circle text-success fa-2x'></i>",
            _ => "<i class='fas fa-info-circle text-info fa-2x'></i>"
        };
    }
}