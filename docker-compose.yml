version: '3.8'

services:
  # Single PostgreSQL instance for all services
  postgres:
    image: postgres:15-alpine
    container_name: inventory_postgres_all
    environment:
      - TZ=Asia/Baku
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Ak030692
      POSTGRES_MULTIPLE_DATABASES: "identity_service,product_service,route_service,approval_service,notification_service"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
      - ./backups:/backups
    networks:
      - backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: inventory_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Identity Service with Seq logging
  identity-service:
    build:
      context: ./src
      dockerfile: IdentityService.API/Dockerfile
    container_name: inventory_identity_service
    environment:
      - TZ=Asia/Baku
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=identity_service;Username=postgres;Password=Ak030692;
      - ConnectionStrings__Seq=http://seq:5342  # This tells the service where to send logs
      - Jwt__Key=ThisIsAVerySecureSecretKeyForJWT2025With32CharsMin!@#$$%
      - Jwt__Issuer=166Logistics
      - Jwt__Audience=InventorySystemUsers
      # Serilog configuration for structured logging
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__MinimumLevel__Override__System=Warning
      - Serilog__WriteTo__0__Name=Seq
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5342
      - Serilog__Properties__ApplicationName=IdentityService
    ports:
      - "5001:80"
    depends_on:
      postgres:
        condition: service_healthy
      seq:
        condition: service_started
    networks:
      - backend
    restart: always

  # Product Service with Seq logging and fixed file permissions
  product-service:
    build:
      context: ./src
      dockerfile: ProductService.API/Dockerfile
    container_name: inventory_product_service
    environment:
      - TZ=Asia/Baku
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=product_service;Username=postgres;Password=Ak030692;
      - ConnectionStrings__Seq=http://seq:5342
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Jwt__Key=ThisIsAVerySecureSecretKeyForJWT2025With32CharsMin!@#$$%
      - Jwt__Issuer=166Logistics
      - Jwt__Audience=InventorySystemUsers
      # Serilog configuration
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__MinimumLevel__Override__System=Warning
      - Serilog__WriteTo__0__Name=Seq
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5342
      - Serilog__Properties__ApplicationName=ProductService
    ports:
      - "5002:80"
    depends_on:
        postgres:
            condition: service_healthy
        rabbitmq:
            condition: service_healthy
        seq:
            condition: service_healthy
    volumes:
      # Note: We're ensuring the container can write to these directories
      - ./storage/images/products:/app/wwwroot/images/products:rw
    networks:
      - backend
    restart: always

  # Route Service with Seq logging
  route-service:
    build:
      context: ./src
      dockerfile: RouteService.API/Dockerfile
    container_name: inventory_route_service
    environment:
      - TZ=Asia/Baku
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=route_service;Username=postgres;Password=Ak030692;
      - ConnectionStrings__Seq=http://seq:5342
      - ProductService__BaseUrl=http://product-service
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Jwt__Key=ThisIsAVerySecureSecretKeyForJWT2025With32CharsMin!@#$$%
      - Jwt__Issuer=166Logistics
      - Jwt__Audience=InventorySystemUsers
      # Serilog configuration
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__WriteTo__0__Name=Seq
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5342
      - Serilog__Properties__ApplicationName=RouteService
    ports:
      - "5003:80"
    depends_on:
      - postgres
      - rabbitmq
      - product-service
      - seq
    volumes:
      - ./storage/images/routes:/app/wwwroot/images/routes:rw
    networks:
      - backend
    restart: always

  # Approval Service with Seq logging
  approval-service:
    build:
      context: ./src
      dockerfile: ApprovalService.API/Dockerfile
    container_name: inventory_approval_service
    environment:
      - TZ=Asia/Baku
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=approval_service;Username=postgres;Password=Ak030692;
      - ConnectionStrings__Seq=http://seq:5342
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Jwt__Key=ThisIsAVerySecureSecretKeyForJWT2025With32CharsMin!@#$$%
      - Jwt__Issuer=166Logistics
      - Jwt__Audience=InventorySystemUsers
      - Services__ProductService=http://api-gateway
      - Services__RouteService=http://api-gateway
      # Serilog configuration
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__WriteTo__0__Name=Seq
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5342
      - Serilog__Properties__ApplicationName=ApprovalService
    ports:
      - "5004:80"
    depends_on:
      - postgres
      - rabbitmq
      - seq
    networks:
      - backend
    restart: always

  # Notification Service with Seq logging
  notification-service:
    build:
      context: ./src
      dockerfile: NotificationService.API/Dockerfile
    container_name: inventory_notification_service
    environment:
      - TZ=Asia/Baku
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=notification_service;Username=postgres;Password=Ak030692;
      - ConnectionStrings__Seq=http://seq:5342
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=guest
      - RabbitMQ__Password=guest
      - Jwt__Key=ThisIsAVerySecureSecretKeyForJWT2025With32CharsMin!@#$$%
      - Jwt__Issuer=166Logistics
      - Jwt__Audience=InventorySystemUsers
      - WhatsApp__ApiUrl=https://7103.api.greenapi.com
      - WhatsApp__MediaUrl=https://7103.media.greenapi.com
      - WhatsApp__IdInstance=${WHATSAPP_ID}
      - WhatsApp__ApiTokenInstance=${WHATSAPP_APITOKEN}
      - WhatsApp__DefaultGroupId=${WHATSAPP_GROUPID}
      - WhatsApp__Enabled=true
      # Serilog configuration
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__WriteTo__0__Name=Seq
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5342
      - Serilog__Properties__ApplicationName=NotificationService
    ports:
      - "5005:80"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      seq:
        condition: service_started
    networks:
      - backend
    restart: always

  # API Gateway with Seq logging
  api-gateway:
    build:
      context: ./src/ApiGateway
      dockerfile: Dockerfile
    container_name: inventory_api_gateway
    environment:
      - TZ=Asia/Baku
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Seq=http://seq:5342
      - Jwt__Key=ThisIsAVerySecureSecretKeyForJWT2025With32CharsMin!@#$$%
      - Jwt__Issuer=166Logistics
      - Jwt__Audience=InventorySystemUsers
      # Serilog configuration
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__WriteTo__0__Name=Seq
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5342
      - Serilog__Properties__ApplicationName=ApiGateway
    ports:
      - "5000:80"
    depends_on:
      - seq
    networks:
      - backend
      - frontend
    restart: always

  # Web Application with enhanced Seq logging
  web:
    build:
      context: ./src
      dockerfile: InventoryManagement.Web/Dockerfile
    container_name: inventory_web
    environment:
      - TZ=Asia/Baku
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ApiGateway__BaseUrl=http://api-gateway
      - ConnectionStrings__Seq=http://seq:5342
      # Enhanced Serilog configuration for the web application
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Warning
      - Serilog__MinimumLevel__Override__Microsoft.AspNetCore.Hosting=Information
      - Serilog__WriteTo__0__Name=Seq
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5342
      - Serilog__WriteTo__0__Args__restrictedToMinimumLevel=Information
      - Serilog__Properties__ApplicationName=WebApplication
      - Serilog__Properties__Environment=Production
    depends_on:
      - api-gateway
      - seq
    networks:
      - frontend
      - backend
    restart: always
    volumes:
      - ./logs/web:/app/logs

  # Seq - Centralized logging system (started early so other services can connect)
  seq:
    image: datalust/seq:latest
    container_name: inventory_seq
    environment:
      - TZ=Asia/Baku
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORD=Admin123!
      - SEQ_API_CANONICALURI=http://seq
      - SEQ_CACHE_SYSTEMRAMTARGET=0.2
    ports:
      - "5342:80"
    volumes:
      - seq_data:/data
    networks:
      - backend
    restart: always
    healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost/api/events/raw"]
    interval: 30s
    timeout: 10s
    retries: 3
    start_period: 40s
    # Seq should start early since other services depend on it for logging

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: inventory_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs:/var/log/nginx
      - ./storage/images:/var/www/images:ro
    depends_on:
      - web
    networks:
      - frontend
      - backend
    restart: always

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  rabbitmq_data:
  postgres_data:
  seq_data:
